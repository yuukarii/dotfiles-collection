;; Created   by https://github.com/rxyhn
;; Designed  by https://github.com/rxyhn
;; Maintaned by https://github.com/rxyhn

;; put path to aesthetic bar config files here ;;
(defvar eww "$HOME/.local/bin/eww -c $HOME/.config/eww")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Widget Section's							 ;;	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Workspaces Widgets ;;

(deflisten active-workspace `$HOME/.config/eww/scripts/getactivews`)
(deflisten urgent-workspace `$HOME/.config/eww/scripts/geturgentws`)
;; had to set the initial workspace to "1"
(deflisten focused-workspace :initial "1" `$HOME/.config/eww/scripts/getfocusedws`)

(defwidget workspaces [active-workspace focused-workspace urgent-workspace]
    (box
    :class "workspaces"
    :orientation "v"
    :space-evenly true
    :halign "start"
    
    (button
    :class {
      arraylength(search(focused-workspace, "1")) > 0 ? "focused-workspace" : 
      arraylength(search(urgent-workspace, "1")) > 0 ? "urgent-workspace" : 
      arraylength(search(active-workspace, "1")) > 0 ? "active-workspace" : 
      "regular"
    }
    :onclick "i3-msg workspace 1" 1)

    (button  
    :class {
      arraylength(search(focused-workspace, "2")) > 0 ? "focused-workspace" : 
      arraylength(search(urgent-workspace, "2")) > 0 ? "urgent-workspace" : 
      arraylength(search(active-workspace, "2")) > 0 ? "active-workspace" : 
      "regular"
    }
    :onclick "i3-msg workspace 2" 2)

    (button
    :class {
      arraylength(search(focused-workspace, "3")) > 0 ? "focused-workspace" : 
      arraylength(search(urgent-workspace, "3")) > 0 ? "urgent-workspace" : 
      arraylength(search(active-workspace, "3")) > 0 ? "active-workspace" : 
      "regular"
    }
    :onclick "i3-msg workspace 3" 3)

    (button
    :class {
      arraylength(search(focused-workspace, "4")) > 0 ? "focused-workspace" : 
      arraylength(search(urgent-workspace, "4")) > 0 ? "urgent-workspace" : 
      arraylength(search(active-workspace, "4")) > 0 ? "active-workspace" : 
      "regular"
    }
    :onclick "i3-msg workspace 4" 4)

    (button
    :class {
      arraylength(search(focused-workspace, "5")) > 0 ? "focused-workspace" : 
      arraylength(search(urgent-workspace, "5")) > 0 ? "urgent-workspace" : 
      arraylength(search(active-workspace, "5")) > 0 ? "active-workspace" : 
      "regular"
    }
    :onclick "i3-msg workspace 5" 5)

    (button
    :class {
      arraylength(search(focused-workspace, "6")) > 0 ? "focused-workspace" : 
      arraylength(search(urgent-workspace, "6")) > 0 ? "urgent-workspace" : 
      arraylength(search(active-workspace, "6")) > 0 ? "active-workspace" : 
      "regular"
    }
    :onclick "i3-msg workspace 6" 6)

    (button
    :class {
      arraylength(search(focused-workspace, "7")) > 0 ? "focused-workspace" : 
      arraylength(search(urgent-workspace, "7")) > 0 ? "urgent-workspace" : 
      arraylength(search(active-workspace, "7")) > 0 ? "active-workspace" : 
      "regular"
    }
    :onclick "i3-msg workspace 7" 7)

    (button
    :class {
      arraylength(search(focused-workspace, "8")) > 0 ? "focused-workspace" : 
      arraylength(search(urgent-workspace, "8")) > 0 ? "urgent-workspace" : 
      arraylength(search(active-workspace, "8")) > 0 ? "active-workspace" : 
      "regular"
    }
    :onclick "i3-msg workspace 8" 8)

    (button
    :class {
      arraylength(search(focused-workspace, "9")) > 0 ? "focused-workspace" : 
      arraylength(search(urgent-workspace, "9")) > 0 ? "urgent-workspace" : 
      arraylength(search(active-workspace, "9")) > 0 ? "active-workspace" : 
      "regular"
    }
    :onclick "i3-msg workspace 9" 9)
  )
)

;; Battery Widgets ;;
(defwidget bat []
    (box	:orientation "v"	
            :space-evenly "false"
    (label	:class "bat"		
            :halign "end"		
            :text battery	
            :tooltip "Battery: ${battery-cappacity}%")))
(defpoll battery			:interval "1s"	"scripts/battery icon")
(defpoll battery-cappacity	:interval "1s"	"scripts/battery percent")

;; Wifi Widgets ;;
(defwidget wifi []
    (box		:orientation "v"  
                :tooltip wifi-name
    (button		:class "wifi-icon" wifi-icon)))
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")

;; Brightness Widgets ;;
(defwidget bright []
  (eventbox :onhover "${eww} update bright=true"   
            :onhoverlost "${eww} update bright=false"
            (box    :orientation "v"  
                    :space-evenly "false"  
                    :spacing 2
            (revealer :transition "slideup" 
                      :reveal bright   
                      :duration "550ms"
            (scale  :class "bribar" 
                    :value current-brightness 
                    :tooltip "Brightness: ${current-brightness}%" 
                    :onchange "brightnessctl set {}%" 
                    :orientation "v" 
                    :flipped true 
                    :max 101 
                    :min 0))
            (label  :class "brightness-icon" 
                    :text "󰃠"))))
(defpoll current-brightness :interval "1s" "brightnessctl -m -d amdgpu_bl1 | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
(defvar bright false)

;; Volume Widgets ;;
(defwidget volum []
    (eventbox :onhover "${eww} update volum=true" 		
              :onhoverlost "${eww} update volum=false"
    (box      :orientation "v" 	  
              :space-evenly "false" 
              :spacing "2"
    (revealer :transition "slideup" 
              :reveal volum         
              :duration "550ms"
    (scale    :class "volbar" 	  
              :value current-volume 
              :orientation "v"      
              :flipped true 
              :tooltip "Volume: ${current-volume}%" 
              :max 101 
              :min 0 
              :onchange "pamixer --set-volume {}" ))
    (button   :onclick "scripts/popup audio"   :class "volume-icon" "󰕾"))))
(defpoll current-volume :interval "1s" "pamixer --get-volume")
(defvar volum false)

;; Control Panel Widgets ;;	
(defwidget control []
    (box :orientation "v" 
         :space-evenly false  
         :class "control"
(bat)
(wifi)
(bright)
(volum)))

;; Clock Widgets ;;
(defwidget time []
    (box	:orientation "v" 
            :class "time" 
            :valign "end"
    (button	:onclick "scripts/popup calendar"	
            :class "time-hour" hour)
    (button	:onclick "scripts/popup calendar"	
            :class "time-min"  min)))
(defpoll hour	:interval "1s"	"date '+%H'")
(defpoll min	:interval "1s"	"date '+%M'")

;; Calendar Widgets ;;
(defwidget cal []
    (box :class "cal-box" 
         :orientation "v"
    (box :class "cal-inner-box"
    (calendar :class "cal" 
              :day calendar_day 
              :month calendar_month 
              :year calendar_year))))
(defpoll calendar_day :interval "10h"
    "date '+%d'")
(defpoll calendar_month :interval "10h"
    "scripts/calendar")
(defpoll calendar_year :interval "10h"
    "date '+%Y'")

;; Powermenu Widgets ;;
(defwidget power []
    (eventbox	:onhover "${eww} update power=true"	
                :onhoverlost "${eww} update power=false" 
    (box		:orientation "v"					
                :space-evenly "false" 	 
                :vexpand "false" 	
                :class "powermenu"
    (revealer	:transition "slideup"				
                :reveal power			 
                :duration "550ms"
    (box		:orientation "v"					
                :space-evenly "false"

    (button		:class "button-reb"					
                :tooltip "Reboot"		 
                :onclick "reboot"	"")

    (button		:class "button-quit" 				
                :tooltip "Logout" 		 
                :onclick "pkill -KILL -u $USER" "󰍃")

    (button		:class "button-lock" 				
                :tooltip "Lock Screen"	 
                :onclick "betterlockscreen -l"	"󰌾")))

    (button		:class "button-off"					
                :tooltip "Shutdown"		 
                :onclick "shutdown now"	""))))
(defvar power false)

;; Top Widgets ;;
(defwidget top []
    (box	:orientation "v" 
            :space-evenly "false" 
            :valign "start" 
(workspaces 
      :active-workspace active-workspace
      :focused-workspace focused-workspace
      :urgent-workspace urgent-workspace)))

(defwidget tray []
    (box :class "systray"
        (systray	:spacing 3
                :orientation "v"
                :space-evenly true
                :icon-size 16
                :prepend-new false)))

;; Bottom Widgets ;;
(defwidget bottom []
    (box	:orientation "v" 
            :space-evenly false 
(time)
(power)))

;; End Widgets ;;
(defwidget end []
    (box :orientation "v" 
         :space-evenly "false" 
         :valign "end" 
         :spacing 5
(control)
(tray)
(bottom)))

;; Bar Widgets ;;
(defwidget bar []
    (box :class "eww_bar" 
         :orientation "v" 
         :vexpand "false" 
         :hexpand "false"
(top)
(end)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Window Section's							 ;;	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Bar Windows ;;
(defwindow bar
    :monitor 0
        :geometry (geometry
                :x "10px"
                :y "0px"
                :width "35px"
                :height "90%"
                :anchor "center left")
        :stacking "fg"
        :focusable false
    :hexpand "false"
    :vexpand "false"
(bar))

;; Calendar Windows ;;
(defwindow calendar
    :geometry (geometry :x "60px" 
                        :y "70%"
                        :width "270px" 
                        :height "60px")
(cal))
